{"version":3,"sources":["Components/ThemeModeSwitch/ThemeModeSwitch.js","Components/Navigation/Navigation.js","Components/Home/Home.js","Components/About/process_thinker_light.svg","Components/About/process_thinker_dark.svg","Components/About/self_learner_light.svg","Components/About/self_learner_dark.svg","Components/About/team_player_light.svg","Components/About/team_player_dark.svg","Components/About/About.js","Components/Projects/task_management_light.svg","Components/Projects/task_management_dark.svg","Components/Projects/Projects.js","Containers/QuoteGenerator/QuoteGenerator.js","Components/Contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeModeSwitch","onSwitchThemeMode","event","props","onChangeThemeMode","target","checked","className","this","darkModeOn","id","icon","faMoon","faSun","type","onChange","Component","toggleNav","document","querySelector","classList","toggle","Navigation","faBars","onClick","href","Home","About","src","processThinkerDark","alt","processThinkerLight","selfLearnerDark","selfLearnerLight","teamPlayerDark","teamPlayerLight","Projects","taskManagementDark","taskManagementLight","QuoteGenerator","state","quote","quoteAuthor","longQuote","loading","getNewQuote","bind","tweetQuote","setState","fetch","then","response","json","apiQuotesArr","Math","floor","random","length","author","text","catch","err","console","log","twitterUrl","window","open","faQuoteLeft","title","faTwitter","Contact","faGithub","faLinkedin","App","documentElement","setAttribute","getElementById","style","backgroundColor","localStorage","setItem","currentTheme","getItem","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f997630b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ThemeModeSwitch.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ThemeModeSwitch extends Component {\r\n\tonSwitchThemeMode = (event) => {\r\n\t\tthis.props.onChangeThemeMode(event.target.checked);\r\n\t}\r\n\r\n\trender() {\t\r\n\t\treturn (\r\n\t\t\t<div className=\"theme-switch-wrapper\">\r\n\t\t\t\t{ this.props.darkModeOn \r\n\t\t\t\t\t? \t<span id=\"toggle-icon\">\r\n\t\t\t\t\t\t\t<span className=\"toggle-text\">Dark Mode</span>\r\n\t\t\t\t\t\t  \t<FontAwesomeIcon icon={faMoon} className=\"fs-moon\" />\r\n\t\t\t\t\t\t</span>  \t\r\n\t\t\t\t\t:   <span id=\"toggle-icon\">\r\n\t\t\t\t\t\t\t<span className=\"toggle-text\">Light Mode</span>\r\n\t\t\t\t\t\t  \t<FontAwesomeIcon icon={faSun} className=\"fs-sun\" />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t\t<label className=\"theme-switch\">\r\n\t\t\t\t\t<input type=\"checkbox\" onChange={this.onSwitchThemeMode} />\r\n\t\t\t\t\t<div className=\"slider round\"></div>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ThemeModeSwitch;","import './Navigation.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst toggleNav = () => {\r\n\t//let displayNavBars = document.getElementById(\"menu-items\");\r\n\tlet displayNavBars = document.querySelector(\".menu-items\");\r\n\tdisplayNavBars.classList.toggle(\"show\");\r\n\t//window.getComputedStyle(displayNavBars).display === 'none' ? displayNavBars.style.display = 'flex' : displayNavBars.style.display = 'none';\r\n}\r\n\r\nconst Navigation = () => {\r\n\treturn (\r\n\t<div id=\"nav\">\r\n\t\t<FontAwesomeIcon icon={faBars} className=\"toggleMenu\" onClick={toggleNav}/>\r\n\t\t<div id=\"menu-items\" className=\"menu-items\">\r\n\t\t\t<a href=\"#home\">HOME</a>\r\n\t\t\t<a href=\"#about\">ABOUT</a>\r\n\t\t\t<a href=\"#projects\">PROJECTS</a>\r\n\t\t\t<a href=\"#quoteGenerator\">QUOTE GENERATOR</a>\r\n\t\t\t<a href=\"#contact\">CONTACT</a>\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Navigation;","import './Home.css';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t<div id=\"home\" className=\"section title-group\">\r\n\t\t<h1>ROY'S SITE</h1>\r\n\t\t<h2>FRONTEND PROJECTS</h2>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/process_thinker_light.28e6cfbf.svg\";","export default __webpack_public_path__ + \"static/media/process_thinker_dark.f0ff6439.svg\";","export default __webpack_public_path__ + \"static/media/self_learner_light.a18d9b3d.svg\";","export default __webpack_public_path__ + \"static/media/self_learner_dark.50345e4f.svg\";","export default __webpack_public_path__ + \"static/media/team_player_light.ace674ff.svg\";","export default __webpack_public_path__ + \"static/media/team_player_dark.48910fbe.svg\";","import './About.css';\r\nimport processThinkerLight from './process_thinker_light.svg';\r\nimport processThinkerDark from './process_thinker_dark.svg';\r\nimport selfLearnerLight from './self_learner_light.svg';\r\nimport selfLearnerDark from './self_learner_dark.svg';\r\nimport teamPlayerLight from './team_player_light.svg';\r\nimport teamPlayerDark from './team_player_dark.svg';\r\n\r\nconst About = ({ darkModeOn }) => {\r\n\treturn (\r\n\t<div id=\"about\" className=\"section\">\r\n\t\t<h1>About Me</h1>\r\n\t\t<div className=\"about-container\">\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<h2>Fullstack Developer</h2>\r\n\t\t\t\t{ darkModeOn  \r\n\t\t\t\t\t? <img src={processThinkerDark} alt=\"process thinker\" id=\"leftImage\" />\r\n\t\t\t\t\t: <img src={processThinkerLight} alt=\"process thinker\" id=\"leftImage\" />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<h2>Self Learner</h2>\r\n\t\t\t\t{ darkModeOn\r\n\t\t\t\t\t? <img src={selfLearnerDark} alt=\"self learner\" id=\"centerImage\" />\r\n\t\t\t\t\t: <img src={selfLearnerLight} alt=\"self learner\" id=\"centerImage\" />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<h2>Team Player</h2>\r\n\t\t\t\t{ darkModeOn\r\n\t\t\t\t\t? <img src={teamPlayerDark} alt=\"team player\" id=\"rightImage\" />\r\n\t\t\t\t\t: <img src={teamPlayerLight} alt=\"team player\" id=\"rightImage\" />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/task_management_light.3a66239b.svg\";","export default __webpack_public_path__ + \"static/media/task_management_dark.a007e741.svg\";","import './Projects.css';\r\nimport taskManagementLight from './task_management_light.svg';\r\nimport taskManagementDark from './task_management_dark.svg';\r\n\r\nconst Projects = ({ darkModeOn }) => {\r\n\treturn (\r\n\t<div id=\"projects\" className=\"section\">\r\n\t\t<h1>My Projects</h1>\r\n\t\t<div className=\"projects-container\">\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<h2>Task Management</h2>\r\n\t\t\t\t{ darkModeOn  \r\n\t\t\t\t\t? <img src={taskManagementDark} alt=\"task manangement\" id=\"taskManagementLightImage\" />\r\n\t\t\t\t\t: <img src={taskManagementLight} alt=\"task manangement\" id=\"taskManagementDarkImage\" />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\nimport './QuoteGenerator.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\n\n\n\nclass QuoteGenerator extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      quote: \"To be or not to be.\",\n      quoteAuthor: \"William Shakespeare\",\n      longQuote: false,\n      loading: false\n    }\n    this.getNewQuote = this.getNewQuote.bind(this);\n    this.tweetQuote = this.tweetQuote.bind(this);\n  }\n\n  getNewQuote() {\n    // Add loading animation while the fetch call is happening\n    this.setState({ loading: true });\n    const apiURL = 'https://type.fit/api/quotes';\n    fetch(apiURL)\n      .then(response => response.json())\n      .then(apiQuotesArr => {\n        // Pick a random quote from array\n        const quote = apiQuotesArr[Math.floor(Math.random() * apiQuotesArr.length)];\n        // Check of Author field is blank and replace it with 'Unknown'\n        if (!quote.author) {\n          this.setState({ quoteAuthor: \"Unknown\" });\n        } else {\n          // Set quote author\n          this.setState({ quoteAuthor: quote.author });\n        }\n        // Reduce font size for long quotes\n        if (quote.text.length > 120) {\n          this.setState({ longQuote: true })  \n        } else this.setState({ longQuote: false });\n        // Set quote text\n        this.setState({ quote: quote.text});\n        // Remove the loading animation when we get the quote\n        this.setState({ loading: false });\n      })\n      .catch(err => console.log('whoops, no quote', err))\n  }\n\n  tweetQuote() {\n    const quote = this.state.quote;\n    const author = this.state.quoteAuthor;\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${quote} - ${author}`;\n    window.open(twitterUrl, '_blank');\n  }\n\n  render() {\n    return (\n      <div id=\"quoteGenerator\" className=\"section\">\n      {/* Switching between the loading animation and the quote container depands on the loading state */}\n      {this.state.loading\n      ? <div className=\"loader\"></div>\n      : (<div className=\"quote-container\" id=\"quote-container\">\n          {/* Quote */}\n          <div className={`quote-text ${this.state.longQuote ? \" long-quote\" : \"\"}`} >\n            <FontAwesomeIcon className=\"fa-quote-left\" icon={faQuoteLeft} />\n            <span id=\"quote\">{this.state.quote}</span>\n          </div>\n          {/* Author */} \n          <div className=\"quote-author\">\n            <span id=\"author\">{this.state.quoteAuthor}</span>\n          </div>\n          {/* Buttons */}\n          <div className=\"button-container\" id=\"button-container\">\n            <button className=\"twitter-button\" id=\"twitter\" title=\"Tweet This!\" onClick={this.tweetQuote}>\n              <FontAwesomeIcon icon={faTwitter} />\n            </button>\n            <button id=\"new-quote\" onClick={this.getNewQuote}>New Quote</button>\n          </div>\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default QuoteGenerator;\n","import './Contact.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t<div id=\"contact\" className=\"section title-group\">\r\n\t\t<h1>Contact</h1>\r\n\t\t<div className=\"social-icons\">\r\n\t\t\t<FontAwesomeIcon icon={faGithub} className=\"icon\" />\r\n\t\t\t<FontAwesomeIcon icon={faLinkedin} className=\"icon\" />\r\n\t\t</div>\t\t\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport ThemeModeSwitch from './Components/ThemeModeSwitch/ThemeModeSwitch';\nimport Navigation from './Components/Navigation/Navigation';\nimport Home from './Components/Home/Home';\nimport About from './Components/About/About';\nimport Projects from './Components/Projects/Projects';\nimport QuoteGenerator from './Containers/QuoteGenerator/QuoteGenerator';\nimport Contact from './Components/Contact/Contact';\n\nclass App extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      darkModeOn: false\n    }\n    this.onChangeThemeMode = this.onChangeThemeMode.bind(this);\n  }\n\n  componentDidMount() {\n    // loading dark mode theme if the user switched to it last time he visited the page\n    const currentTheme = localStorage.getItem('theme');\n    if (currentTheme) {\n      if (currentTheme === 'dark') {\n        this.setState({ darkModeOn: true });\n        document.documentElement.setAttribute('data-theme', 'dark');\n        document.getElementById('nav').style.backgroundColor = 'rgb(0 0 0 / 50%)';\n        document.querySelector(\".menu-items\").style.backgroundColor = 'rgb(0 0 0 / 50%)';\n        document.getElementById('quote-container').style.background = 'rgba(0, 0, 0, 0.4)';\n        document.querySelector('input[type=\"checkbox\"]').checked = true;\n      }\n    }\n  }\n\n  toggleDarkLightMode\n\n  onChangeThemeMode = (darkModeOn) => {\n    darkModeOn ? this.setState({ darkModeOn: true }) : this.setState({ darkModeOn: false });\n    darkModeOn ? document.documentElement.setAttribute('data-theme', 'dark') : document.documentElement.setAttribute('data-theme', 'light');\n    darkModeOn ? document.getElementById('nav').style.backgroundColor = 'rgb(0 0 0 / 50%)' : document.getElementById('nav').style.backgroundColor = 'rgb(255 255 255 / 50%)';\n    darkModeOn ? document.getElementById('quote-container').style.backgroundColor = 'rgba(0, 0, 0, 0.4)' : document.getElementById('quote-container').style.backgroundColor = 'rgba(255, 255, 255, 0.4)';\n    darkModeOn ? localStorage.setItem('theme', 'dark') : localStorage.setItem('theme', 'light');   \n  }\n\n  render() {\n    const { darkModeOn } = this.state;\n    return (\n      <div>\n        <ThemeModeSwitch onChangeThemeMode={this.onChangeThemeMode} darkModeOn={darkModeOn} />\n        <Navigation />\n        <Home />\n        <About darkModeOn={darkModeOn} />\n        <Projects darkModeOn={darkModeOn} />\n        <QuoteGenerator />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}